@page
@model findteachersforresearch.Pages.ResearchRounds
@{
    ViewData["Title"] = "Research Rounds";
    ViewData["SuppressFooter"] = true;
}
<div id="researchRoundsPageContainer" style="display: flex; flex-direction: column; height: 100vh;">
    <head><link rel="stylesheet" href="/css/site.css" /></head>
    
    <div style="flex-shrink: 0;">
        <h5>View and edit research rounds...</h5>
    </div>
    
    <div style="flex-shrink: 0; display: flex; align-items: center; justify-content: space-between; margin-bottom: 1rem;">
        <form method="get" asp-page="/ResearchRounds" style="display: flex; align-items: center; gap: 10px; margin: 0;">
            <input type="text" name="searchString" class="form-control search-input" placeholder="Search..." style="width: 400px;">
            <button type="submit" class="btn btn-primary search-button">Search</button>
        </form>
        <button type="button" id="viewCandidatesButton" class="btn btn-secondary" disabled>Edit</button>
    </div>
    
    <div style="flex: 1; overflow-y: auto;">
        <form method="post" id="researchRoundForm">
            <table class="table table-striped table-bordered table-hover" id="researchRoundListTable">
                <thead>
                <tr>
                    <th style="width: 50px;"></th>
                    <th>Id</th>
                    <th>Type</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Created By</th>
                    <th>Created Date</th>
                </tr>
                </thead>
                <tbody>
                @for (var i = 0; i < Model.ResearchRoundList.Count; i++)
                {
                    var round = Model.ResearchRoundList[i];
                    <tr>
                        <td class="align-middle checkbox-cell">
                            <div class="checkbox-wrapper">
                                <input name="SelectedRound" type="checkbox" class="form-check-input select-row" data-id="@round.Id" id="round-@round.Id"/>
                            </div>
                        </td>
                        <td>@round.Id</td>
                        <td>@round.Type</td>
                        <td>@round.Name</td>
                        <td>@(string.IsNullOrEmpty(round.Description) ? "" : round.Description)</td>
                        <td>@round.CreatedBy</td>
                        <td>@round.CreatedDate.ToString("yyyy-MM-dd")</td>
                    </tr>
                }
                </tbody>
            </table>
        </form>
    </div>
    
</div>

<style>
    body, html {
        height: 100%;
        margin: 0;
    }

    #researchRoundsPageContainer {
        display: flex;
        flex-direction: column;
        height: 100vh;
        overflow: hidden;
    }
    
    div[style*="overflow-y: auto"] {
        overflow-y: auto;
        flex: 1;
    }

    .checkbox-cell {
        padding: 0;
    }

    .checkbox-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
    }
</style>


<div id="spinner" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); z-index: 1000; align-items: center; justify-content: center;">
    <div style="width: 40px; height: 40px; border: 8px solid #f3f3f3; border-top: 8px solid #3498db; border-radius: 50%; animation: spin 1s linear infinite;"></div>
    <p style="color: white; font-size: 18px; margin-top: 10px;">Loading...</p>
</div>
<script>

    document.getElementById("researchRoundForm").addEventListener("submit", function() {
        document.getElementById("spinner").style.display = "flex";
    });
    
    document.addEventListener('DOMContentLoaded', function() {
        //**************************************************************************************************************
        //Constants
        //**************************************************************************************************************
        const checkboxes = document.querySelectorAll('.select-row');
        const viewCandidatesButton = document.getElementById('viewCandidatesButton');

        //**************************************************************************************************************
        //Event listeners & functions
        //**************************************************************************************************************
        function updateButtonState() {
            let atLeastOneChecked = false;
            checkboxes.forEach(cb => {
                if (cb.checked) {
                    atLeastOneChecked = true;
                    return;
                }
            });
            viewCandidatesButton.disabled = !atLeastOneChecked;
        }
        function handleCheckboxChange(event) {
            const changedCheckbox = event.target;
            if (changedCheckbox.checked) {
                checkboxes.forEach(cb => {
                    if (cb !== changedCheckbox) {
                        cb.checked = false;
                    }
                });
            }
            updateButtonState();
        }

        viewCandidatesButton.addEventListener('click', function(event) {
            event.preventDefault();
            let checkedRoundId = null;
            checkboxes.forEach(cb => {
                if (cb.checked) {
                    checkedRoundId = cb.dataset.id;
                    return;
                }
            });

            if (checkedRoundId) {
                const roundIdInt = parseInt(checkedRoundId, 10);
                window.location.href = `/ManageResearchRound?researchRoundId=${roundIdInt}`;
            }
        });
        //**************************************************************************************************************
        //Code
        //**************************************************************************************************************
        
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', handleCheckboxChange);
        });

        updateButtonState();
        
    });

</script>